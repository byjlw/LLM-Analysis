**Instructions for AI-powered Medical Imaging Analysis**

**I. Outline**

* **Architecture**:
	+ Data Ingestion: Medical imaging devices will send images to our backend server
	+ Data Preprocessing: Images will be preprocessed using Python libraries (e.g. OpenCV, Scikit-Image)
	+ Model Inference: Preprocessed images will be fed into a machine learning model for analysis
	+ Results Storage: Analysis results will be stored in PostgreSQL database
* **Portions to be built**:
	+ Data Preprocessing module
	+ Machine Learning model for image analysis
	+ Model Inference module

**II. Data Preprocessing Module**

* **Objective**: Preprocess medical images to prepare them for model inference
* **Input**: Medical images from imaging devices
* **Output**: Preprocessed images
* **Requirements**:
	+ Use Python libraries (e.g. OpenCV, Scikit-Image) for image preprocessing
	+ Implement data augmentation techniques (e.g. rotation, flipping) to increase dataset size

**III. Machine Learning Model**

* **Objective**: Develop a machine learning model for medical image analysis
* **Input**: Preprocessed images
* **Output**: Diagnosis results (e.g. disease presence, severity)
* **Requirements**:
	+ Use a deep learning architecture (e.g. CNN, U-Net) for image analysis
	+ Train the model using a dataset of labeled medical images
	+ Achieve a minimum accuracy of 90% on the validation set

**IV. Model Inference Module**

* **Objective**: Use the trained model to analyze new medical images
* **Input**: Preprocessed images
* **Output**: Diagnosis results
* **Requirements**:
	+ Use the trained model to make predictions on new images
	+ Implement a threshold-based approach to determine diagnosis results (e.g. disease presence, severity)

**V. Local Inference and Training**

* **Objective**: Ensure that model inference and training occur locally on the clinical decision support systems
* **Requirements**:
	+ Use a Python-based framework (e.g. TensorFlow, PyTorch) for local model inference and training
	+ Ensure that all data processing and model training occur on local machines, without relying on cloud-based services

**VI. Testing and Validation**

* **Objective**: Validate the accuracy and performance of the AI-powered medical imaging analysis system
* **Requirements**:
	+ Develop a comprehensive testing framework to evaluate the system's performance
	+ Use metrics such as accuracy, precision, recall, and F1-score to evaluate the system's performance
	+ Validate the system's performance on a held-out test set to ensure generalizability.